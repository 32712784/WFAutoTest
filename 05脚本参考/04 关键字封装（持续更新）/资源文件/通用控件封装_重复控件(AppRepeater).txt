*** Settings ***
Library           Selenium2Library
Resource          通用工具方法.txt
Resource          通用控件封装_列表菜单(AppGridMenu).txt

*** Keywords ***
Map_AppRepeater_选中行
    [Arguments]    ${tableId}    ${columnNamesAndValues}
    [Documentation]    *功能：*
    ...
    ...    选中某一行
    ...
    ...    *参数说明：*
    ...
    ...    tableId ：Repeater控件对应的table元素的id
    ...
    ...    columnNamesAndValues : 用来定位行的列标头和对应的字段值，(行标题有换行的用|表示)，格式：column1=value1&column2=value2，如果列名或者值包含=，请用*eq*代替
    ...
    ...    *示例：*
    ...
    ...    Map_AppRepeater_选中行 | tblBudget | 项目名称=216165-56546564&合约规划名称=合作款项
    Return From Keyword If    '${columnNamesAndValues}'=='' or '${columnNamesAndValues}'=='[NULL]'
    _getRepeaterTRAndAction    ${tableId}    ${columnNamesAndValues}    1

Map_AppRepeater_批量选中多行
    [Arguments]    ${tableId}    ${locatorData}    ${locatorColumnNames}=    ${rowFilterCondition}=
    [Documentation]    *功能：*
    ...
    ...    批量通过列表头和对应的值选中行(模拟按住Ctrl键选择多行)（参数为数组格式）
    ...
    ...    *参数说明：*
    ...
    ...    tableID：repeater控件对应table元素的id
    ...
    ...    locatorData : 用来定位行的数据，是一个二维数组，数组的第一个元素是列头集合,其他元素为数据行。格式如下：
    ...
    ...    [['columnA','columnB','columnC','columnD'],[23,'aa','bb',100],[55,'cc','dd',200]]
    ...
    ...    locatorColumnNames：用于定位的列名集合，列名之间用&连接，格式为columnA&columnB；默认值为空，表示数组中所有列名都是定位列。
    ...
    ...    rowFilterCondition：过滤数据记录条件，格式为 columnA=value1&columnB=value2；默认值为空，表示所有数据行。
    ...
    ...    *示例：*
    ...
    ...    ${locatorData} | Evaluate | [[u'序号',u'款项类型',u'款项名称',u'计划付款金额',u'计划付款日期',u'付款说明'],[1,u'工程合同款',u'进度款',1234,u'2014-09-28',u'说明说明111'],[2,u'应扣款',u'代付代扣款',4567.89,u'2014-09-28',u'说明说明322']]
    ...
    ...    Map_AppRepeater_批量选中多行 | Table1 | ${locatorData} | 款项类型&款项名称 | 计划付款日期=2014-09-28
    ${isContainData}    _checkTwoDimensionArrayContainsData    ${locatorData}
    Return From Keyword If    '${isContainData}' == '0'
    ${splitStr}    Evaluate    u'^'
    ${columnNamesAndValuesList}    _buildBatchInputVars    ${locatorData}    ${locatorColumnNames}    ${rowFilterCondition}    ${splitStr}
    Return From Keyword If    '${columnNamesAndValuesList}'==''
    ${columnNamesAndValuesArr}    Evaluate    u'${columnNamesAndValuesList}'.split('${splitStr}')
    ${columnNamesAndValuesArrLen}    Evaluate    len(${columnNamesAndValuesArr})
    #清除已选记录
    Execute Javascript    var table = window.document.getElementById('${tableId}');unselectRows(table);
    : FOR    ${i}    IN RANGE    ${columnNamesAndValuesArrLen}
    \    ${rowIndexToAction}    _getRepeaterTR    ${tableId}    ${columnNamesAndValuesArr[${i}]}
    \    Execute Javascript    var rowIndexToAction=${rowIndexToAction};var table=window.document.getElementById('${tableId}');var tr=table.rows[rowIndexToAction];selectRow(table,tr);var inputs=tr.getElementsByTagName('input');if(inputs&&inputs.length>0){for(var i=0;i<inputs.length;i++){if(inputs[i].type=='checkbox'){var Css = document.defaultView.getComputedStyle(inputs[i], null);if (Css.display != "none"){inputs[i].click();inputs[i].checked=true;break;}}}}

Map_AppRepeater_批量选中多行_根据序号
    [Arguments]    ${tableId}    ${rowNumberList}
    [Documentation]    *功能：*
    ...
    ...    通过序号批量选中行(根据序号)
    ...
    ...    *参数说明：*
    ...
    ...    tableID：repeater控件对应table元素的id
    ...
    ...    rowNumberList：序号列表，序号之间用|分割
    ...
    ...    *示例：*
    ...
    ...    Map_AppRepeater_批量选中多行_根据序号 | table1 |　9|10|11
    Return From Keyword If    '${rowNumberList}'=='' or '${rowNumberList}'=='[NULL]'
    ${rowNumberArr}    Evaluate    u'${rowNumberList}'.split('|')
    ${rowNumberArrLen}    Evaluate    len(${rowNumberArr})
    #清除已选记录
    Execute Javascript    var table = window.document.getElementById('${tableId}');unselectRows(table);
    : FOR    ${i}    IN RANGE    ${rowNumberArrLen}
    \    ${rowNumber}    Evaluate    ${rowNumberArr}[${i}]
    \    Execute Javascript    var rowIndexToAction = ${rowNumber};var table = window.document.getElementById('${tableId}');var tr = table.rows[rowIndexToAction];selectRow(table,tr);var inputs=tr.getElementsByTagName('input');if(inputs&&inputs.length>0){for(var i=0;i<inputs.length;i++){if(inputs[i].type=='checkbox'){var Css = document.defaultView.getComputedStyle(inputs[i], null);if (Css.display != "none"){inputs[i].click();inputs[i].checked=true;break;}}}}

Map_AppRepeater_双击行
    [Arguments]    ${tableId}    ${columnNamesAndValues}
    [Documentation]    *功能：*
    ...
    ...    双击某一行
    ...
    ...    *参数说明：*
    ...
    ...    tableId ：Repeater控件对应的table元素的id
    ...
    ...    columnNamesAndValues : 用来定位行的列标头和对应的字段值(行标题有换行的用|表示)，格式：column1=value1&column2=value2，如果列名或者值包含=，请用*eq*代替
    ...
    ...    *示例：*
    ...
    ...    Map_AppRepeater_双击行 | tblBudget | 项目名称=216165-56546564&合约规划名称=合作款项
    Return From Keyword If    '${columnNamesAndValues}'=='' or '${columnNamesAndValues}'=='[NULL]'
    _getRepeaterTRAndAction    ${tableId}    ${columnNamesAndValues}    2

Map_AppRepeater_编辑行
    [Arguments]    ${tableId}    ${locatorColumnNamesAndValues}    ${inputColumnNamesAndValues}
    [Documentation]    *功能：*
    ...
    ...    编辑某一行的值
    ...
    ...    *参数说明：*
    ...
    ...    tableId ：Repeater控件对应的table元素的id
    ...
    ...    locatorColumnNamesAndValues : 用来定位行的列标头和对应的字段值(行标题有换行的用|分割),格式为column1=value1&column2=value2；如果列名中包含=，请用*eq*代替
    ...
    ...    inputColumnNamesAndValues ： 要编辑的字段名称(列标头)和对应的值(行标题有换行的用|分割),格式为column1=value1&column2=value2；如果列名中包含=，请用*eq*代替;如果要设置checkbox，value格式为checkbox:1或者checkbox:0
    ...
    ...    *示例：*
    ...
    ...    Map_AppRepeater_编辑行| tblBudget | 项目名称=万科城花璟苑-二期&合约规划名称=土地取得价款 | 对应金额=1300.00&预估变更金额=1200
    Return From Keyword If    '${inputColumnNamesAndValues}'=='' or '${locatorColumnNamesAndValues}' =='' or '${inputColumnNamesAndValues}'=='[NULL]' or '${locatorColumnNamesAndValues}' =='[NULL]'
    #parse locate column names and values
    ${columnNameList}    ${valueList}    _parseQueryStringToArray    ${locatorColumnNamesAndValues}
    #parse input columns and values
    ${inputColumnNameList}    ${inputValueList}    _parseQueryStringToArray    ${inputColumnNamesAndValues}
    ${headerMode}    _getRepeaterHeaderMode    ${tableId}
    #set locate column index
    ${locateColumnIndexInfo}    _myExecuteJS    function rp(s){while(s.indexOf('　')>-1||s.indexOf(' ')>-1)s=s.replace('　','').replace(' ','');return s;};function formatObject(o){var s='';for(var key in o){s+=key+':'+o[key]+' ';}return s;};function checkColumnMatched(columnInnerText,columnName){if(columnName.indexOf('|')>-1){var textArr=columnName.split('|');var text1=textArr[0];var text2=textArr[1];return(columnInnerText.indexOf(text1)>-1&&columnInnerText.indexOf(text2)>-1);}else{return columnInnerText==columnName;}};var tableId='${tableId}';var table=window.document.getElementById(tableId);if(!table){return'0|||封装提示信息：未找到id为"'+tableId+'"的table元素，请检查是否正确的传入tableId，或者进入了正确的iframe';}var rowHeader=table.rows[0];var columnNames=${columnNameList};var headerMode=${headerMode};var dicColumnAndIndex={};var foundColumn;if(headerMode==1){for(var i=0;i<columnNames.length;i++){foundColumn=false;for(var j=0;j<rowHeader.cells.length;j+=2){if(rowHeader.cells[j].innerText&&checkColumnMatched(rp(rowHeader.cells[j].innerText),columnNames[i])){dicColumnAndIndex[columnNames[i]]=parseInt(j/2);foundColumn=true;break;}}if(!foundColumn){return'0|||封装提示信息：未找到列"'+columnNames[i]+'"，请检查参数是否正确';}}table.dicColumnAndIndex=dicColumnAndIndex;return'1|||'+formatObject(dicColumnAndIndex);}else if(headerMode==2){for(var i=0;i<columnNames.length;i++){foundColumn=false;for(var j=0;j<rowHeader.cells.length;j++){if(rowHeader.cells[j].innerText&&checkColumnMatched(rp(rowHeader.cells[j].innerText),columnNames[i])){dicColumnAndIndex[columnNames[i]]=j;foundColumn=true;break;}}if(!foundColumn){return'0|||封装提示信息：未找到列"'+columnNames[i]+'"，请检查参数是否正确';}}table.dicColumnAndIndex=dicColumnAndIndex;return'1|||'+formatObject(dicColumnAndIndex);}
    #set input column index
    ${inputColumnIndexInfo}    _myExecuteJS    function rp(s){while(s.indexOf('　')>-1||s.indexOf(' ')>-1)s=s.replace('　','').replace(' ','');return s;};function formatObject(o){var s='';for(var key in o){s+=key+':'+o[key]+' ';}return s;};function checkColumnMatched(columnInnerText,columnName){if(columnName.indexOf('|')>-1){var textArr=columnName.split('|');var text1=textArr[0];var text2=textArr[1];return(columnInnerText.indexOf(text1)>-1&&columnInnerText.indexOf(text2)>-1);}else{return columnInnerText==columnName;}};var tableId='${tableId}';var table=window.document.getElementById(tableId);if(!table){return'0|||封装提示信息：未找到id为"'+tableId+'"的table元素，请检查是否正确的传入tableId，或者进入了正确的iframe';}var rowHeader=table.rows[0];var inputColumnNames=${inputColumnNameList};var headerMode=${headerMode};var dicInputColumnAndIndex={};var foundColumn;if(headerMode==1){for(var i=0;i<inputColumnNames.length;i++){foundColumn=false;for(var j=0;j<rowHeader.cells.length;j+=2){if(rowHeader.cells[j].innerText&&checkColumnMatched(rp(rowHeader.cells[j].innerText),inputColumnNames[i])){dicInputColumnAndIndex[inputColumnNames[i]]=parseInt(j/2);foundColumn=true;break;}}if(!foundColumn){return'0|||封装提示信息：未找到列"'+inputColumnNames[i]+'"，请检查参数是否正确';}}table.dicInputColumnAndIndex=dicInputColumnAndIndex;return'1|||'+formatObject(dicInputColumnAndIndex);}else if(headerMode==2){for(var i=0;i<inputColumnNames.length;i++){foundColumn=false;for(var j=0;j<rowHeader.cells.length;j++){if(rowHeader.cells[j].innerText&&checkColumnMatched(rp(rowHeader.cells[j].innerText),inputColumnNames[i])){dicInputColumnAndIndex[inputColumnNames[i]]=j;foundColumn=true;break;}}if(!foundColumn){return'0|||封装提示信息：未找到列"'+inputColumnNames[i]+'"，请检查参数是否正确';}}table.dicInputColumnAndIndex=dicInputColumnAndIndex;return'1|||'+formatObject(dicInputColumnAndIndex);}
    #locate row to edit
    ${rowIndexToEdit}    _myExecuteJS    var columnIndexList=[];var columnNames=${columnNameList};var valueList=${valueList};var locatorColumnNamesAndValues='${locatorColumnNamesAndValues}';var matched;var tableId='${tableId}';var gridData=window.document.getElementById(tableId);if(!gridData){return'0|||封装提示信息：未找到id为"'+tableId+'"的table元素，请检查是否正确的传入tableId，或者进入了正确的iframe';}var dicColumnAndIndex=gridData.dicColumnAndIndex;function rp(s){while(s.indexOf('　')>-1||s.indexOf(' ')>-1)s=s.replace('　','').replace(' ','');return s;};function checkMatch(cell,value){var inputs=cell.getElementsByTagName('input');if(inputs&&inputs.length>0){return(rp(inputs[0].value)==value);}var selects=cell.getElementsByTagName('select');if(selects&&selects.length>0){var select=selects[0];return rp(select.options[select.selectedIndex].text)==value;}return rp(cell.innerText)==value;}for(var i=0;i<columnNames.length;i++)columnIndexList.push(dicColumnAndIndex[columnNames[i]]);for(var i=1;i<gridData.rows.length;i++){matched=true;for(var j=0;j<columnIndexList.length;j++){matched=matched&&checkMatch(gridData.rows[i].cells[columnIndexList[j]],valueList[j]);}if(matched){gridData.setAttribute('rowIndexToEdit',i);return'1|||'+i;}}return'0|||封装提示信息：未找到满足条件"'+locatorColumnNamesAndValues+'"的行，请检查参数是否正确';
    #input values
    Run Keyword And Continue On Failure    _myExecuteJS    var tableId='${tableId}';var table=window.document.getElementById(tableId);if(!table){return'0|||封装提示信息：未找到id为"'+tableId+'"的table元素，请检查是否正确的传入tableId，或者进入了正确的iframe';}var rowIndexToEdit=table.getAttribute('rowIndexToEdit');var inputColumnNames=${inputColumnNameList};var inputColumnIndexList=[];var dicInputColumnAndIndex=table.dicInputColumnAndIndex;for(var i=0;i<inputColumnNames.length;i++)inputColumnIndexList.push(dicInputColumnAndIndex[inputColumnNames[i]]);var inputValuesList=${inputValueList};var Css = document.defaultView.getComputedStyle(table.rows[rowIndexToEdit], null);if (Css.display != "none"){table.rows[rowIndexToEdit].click();}var inputControl,cell,errorMsg='';for(var j=0;j<inputValuesList.length;j++){cell=table.rows[rowIndexToEdit].cells[inputColumnIndexList[j]];var inputValue=inputValuesList[j];if(inputValue.indexOf('checkbox:')>-1){var isSelect=inputValue.split(':')[1];var checkboxs=cell.getElementsByTagName('input');if(checkboxs&&checkboxs.length>0){var checkbox=checkboxs[0];if(checkbox.type=='checkbox'){var Css = document.defaultView.getComputedStyle(checkbox, null);if (Css.display != "none"){if(isSelect==1){checkbox.checked=true;}else if(isSelect==0){checkbox.checked=false;}}}}continue;}var inputs=cell.getElementsByTagName('input');if(inputs&&inputs.length>0){inputControl=inputs[0];if(inputControl.readOnly||inputControl.disabled){errorMsg+='第'+rowIndexToEdit+'行，第'+j+'列单元格禁用，无法编辑;';continue;}var Css = document.defaultView.getComputedStyle(inputControl, null);if (Css.display != "none"){inputControl.focus();inputControl.value=inputValuesList[j];inputControl.fireEvent('onblur');inputControl.fireEvent('onbeforedeactivate');inputControl.fireEvent('onchange');continue;}}var selects=cell.getElementsByTagName('select');var foundOption=false;if(selects&&selects.length>0){inputControl=selects[0];if(inputControl.disabled){errorMsg+='第'+rowIndexToEdit+'行，第'+j+'列单元格内下拉框禁用，无法编辑;';continue;}var options=inputControl.getElementsByTagName('option');for(var i=0;i<options.length;i++){if(options[i].innerText==inputValuesList[j]){var Css = document.defaultView.getComputedStyle(options[i], null);if (Css.display != "none"){options[i].selected=true;inputControl.fireEvent('onchange');foundOption=true;}}}if(foundOption){continue;}else{errorMsg+='第'+rowIndexToEdit+'行，第'+j+'列下拉框中不存在文本为"'+inputValuesList[j]+'"的选项，请检查参数是否正确';}}errorMsg+='第'+rowIndexToEdit+'行，第'+j+'列单元格无法编辑';}if(errorMsg!=''){return'0|||封装提示信息：'+errorMsg;}

Map_AppRepeater_编辑行_根据序号
    [Arguments]    ${tableId}    ${rowNumber}    ${inputColumnNamesAndValues}
    [Documentation]    *功能：*
    ...
    ...    编辑某一行的值(通过行号定位，仅在无法定位行的场景下使用)
    ...
    ...    *参数说明：*
    ...
    ...    tableId ：Repeater控件对应的table元素的id
    ...
    ...    rowNumber : 行号，从1开始
    ...
    ...    inputColumnNamesAndValues ： 要编辑的字段名称(列标头)和对应的值(行标题有换行的用|分割),格式为column1=value1&column2=value2；如果列名中包含=，请用*eq*代替
    ...
    ...    *示例：*
    ...
    ...    Map_AppRepeater_编辑行_根据序号 | tblBudget | 1 | 对应金额=1300.00&预估变更金额=1200
    Return From Keyword If    '${inputColumnNamesAndValues}'==''
    #parse input columns and values
    ${inputColumnNameList}    ${inputValueList}    _parseQueryStringToArray    ${inputColumnNamesAndValues}
    ${headerMode}    _getRepeaterHeaderMode    ${tableId}
    #set input column index
    ${inputeColumnIndexInfo}    _myExecuteJS    function rp(s){while(s.indexOf('　')>-1||s.indexOf(' ')>-1)s=s.replace('　','').replace(' ','');return s;};function formatObject(o){var s='';for(var key in o){s+=key+':'+o[key]+' ';}return s;};function checkColumnMatched(columnInnerText,columnName){if(columnName.indexOf('|')>-1){var textArr=columnName.split('|');var text1=textArr[0];var text2=textArr[1];return(columnInnerText.indexOf(text1)>-1&&columnInnerText.indexOf(text2)>-1);}else{return columnInnerText==columnName;}};var tableId='${tableId}';var table=window.document.getElementById(tableId);if(!table){return'0|||封装提示信息：未找到id为"'+tableId+'"的table元素，请检查是否正确的传入tableId，或者进入了正确的iframe';}var rowHeader=table.rows[0];var inputColumnNames=${inputColumnNameList};var headerMode=${headerMode};var dicInputColumnAndIndex={};var foundColumn;if(headerMode==1){for(var i=0;i<inputColumnNames.length;i++){foundColumn=false;for(var j=0;j<rowHeader.cells.length;j+=2){if(rowHeader.cells[j].innerText&&checkColumnMatched(rp(rowHeader.cells[j].innerText),inputColumnNames[i])){dicInputColumnAndIndex[inputColumnNames[i]]=parseInt(j/2);foundColumn=true;break;}}if(!foundColumn){return'0|||封装提示信息：未找到列"'+inputColumnNames[i]+'"，请检查参数是否正确';}}table.dicInputColumnAndIndex=dicInputColumnAndIndex;return'1|||'+formatObject(dicInputColumnAndIndex);}else if(headerMode==2){for(var i=0;i<inputColumnNames.length;i++){foundColumn=false;for(var j=0;j<rowHeader.cells.length;j++){if(rowHeader.cells[j].innerText&&checkColumnMatched(rp(rowHeader.cells[j].innerText),inputColumnNames[i])){dicInputColumnAndIndex[inputColumnNames[i]]=j;foundColumn=true;break;}}if(!foundColumn){return'0|||封装提示信息：未找到列"'+inputColumnNames[i]+'"，请检查参数是否正确';}}table.dicInputColumnAndIndex=dicInputColumnAndIndex;return'1|||'+formatObject(dicInputColumnAndIndex);}
    #input values
    _myExecuteJS    var tableId='${tableId}';var table=window.document.getElementById(tableId);if(!table){return'0|||封装提示信息：未找到id为"'+tableId+'"的table元素，请检查是否正确的传入tableId，或者进入了正确的iframe';}var rowIndexToEdit=${rowNumber};var inputColumnNames=${inputColumnNameList};var inputColumnIndexList=[];var dicInputColumnAndIndex=table.dicInputColumnAndIndex;for(var i=0;i<inputColumnNames.length;i++)inputColumnIndexList.push(dicInputColumnAndIndex[inputColumnNames[i]]);var inputValuesList=${inputValueList};var Css = document.defaultView.getComputedStyle(table.rows[rowIndexToEdit], null);if (Css.display != "none"){table.rows[rowIndexToEdit].click();}var inputControl,cell,errorMsg='';for(var j=0;j<inputValuesList.length;j++){cell=table.rows[rowIndexToEdit].cells[inputColumnIndexList[j]];var inputs=cell.getElementsByTagName('input');if(inputs&&inputs.length>0){inputControl=inputs[0];if(inputControl.readOnly||inputControl.disabled){errorMsg+='第'+rowIndexToEdit+'行，第'+j+'列单元格禁用，无法编辑;';continue;}var Css = document.defaultView.getComputedStyle(inputControl, null);if (Css.display != "none"){inputControl.focus();inputControl.value=inputValuesList[j];inputControl.fireEvent('onblur');inputControl.fireEvent('onbeforedeactivate');inputControl.fireEvent('onchange');continue;}}var selects=cell.getElementsByTagName('select');var foundOption=false;if(selects&&selects.length>0){inputControl=selects[0];if(inputControl.disabled){errorMsg+='第'+rowIndexToEdit+'行，第'+j+'列单元格内下拉框禁用，无法编辑;';continue;}var options=inputControl.getElementsByTagName('option');for(var i=0;i<options.length;i++){if(options[i].innerText==inputValuesList[j]){var Css = document.defaultView.getComputedStyle(options[i], null);if (Css.display != "none"){options[i].selected=true;inputControl.fireEvent('onchange');foundOption=true;}}}if(foundOption){continue;}else{errorMsg+='第'+rowIndexToEdit+'行，第'+j+'列下拉框中不存在文本为"'+inputValuesList[j]+'"的选项，请检查参数是否正确';}}errorMsg+='第'+rowIndexToEdit+'行，第'+j+'列单元格无法编辑';}if(errorMsg!=''){return'0|||封装提示信息：'+errorMsg;}

Map_AppRepeater_批量编辑多行
    [Arguments]    ${tableId}    ${locatorAndInputData}    ${locatorColumnNames}    ${inputColumnNames}    ${rowFilterCondition}=
    [Documentation]    *功能：*
    ...
    ...    批量编辑多行
    ...
    ...    *参数说明：*
    ...
    ...    tableId:Repeater控件对应的table元素的id
    ...
    ...    locatorAndInputData : 用来定位行及要输入的数据，是一个二维数组，数组的第一个元素是列头集合,其他元素为数据行。格式如下：
    ...
    ...    [['columnA','columnB','columnC','columnD'],[23,'aa','bb',100],[55,'cc','dd',200]]
    ...
    ...    如果某列数据既用于定位，又用于输入，则数据值用^^分割，前半部分的值用于定位，后半部分值用于输入。
    ...
    ...    locatorColumnNames ：用于定位的列头集合，列与列之间用&连接，如columnA&columnB
    ...
    ...    inputColumnNames ：需要输入值的列头集合，列与列之间用&连接，如columnC&columnD
    ...
    ...    rowFilterCondition：过滤数据记录条件，格式为 columnA=value1&columnB=value2；默认值为空，表示所有数据行。
    ...
    ...    *示例：*
    ...
    ...    ${locatorAndInputData} | Evaluate | [[u'序号',u'款项类型',u'款项名称',u'计划付款金额',u'计划付款日期',u'付款说明'],[1,u'工程合同款',u'进度款',1234,u'2014-09-28',u'说明说明111'],[2,u'应扣款',u'代付代扣款',4567.89,u'2014-10-22',u'说明说明322']]
    ...
    ...    Map_AppRepeater_批量编辑多行 | Repeater1 | ${locatorAndInputData} | 序号&款项类型 | 款项名称&计划付款金额&计划付款日期&付款说明
    ${isContainData}    _checkTwoDimensionArrayContainsData    ${locatorAndInputData}
    Return From Keyword If    '${isContainData}' == '0'
    ${splitStr}    Evaluate    u'^'
    ${locatorColumnNamesAndValuesList}    ${inputColumnNamesAndValuesList}    _buildBatchLocatorAndInputVars    ${locatorAndInputData}    ${locatorColumnNames}    ${inputColumnNames}    ${rowFilterCondition}
    ...    ${splitStr}
    Return From Keyword If    '${locatorColumnNamesAndValuesList}'=='' or '${inputColumnNamesAndValuesList}' == ''
    ${locatorColumnNamesAndValuesArr}    Evaluate    u'${locatorColumnNamesAndValuesList}'.split('${splitStr}')
    ${inputColumnNamesAndValuesArr}    Evaluate    u'${inputColumnNamesAndValuesList}'.split('${splitStr}')
    ${columnNamesAndValuesArrLen}    Evaluate    len(${locatorColumnNamesAndValuesArr})
    : FOR    ${i}    IN RANGE    ${columnNamesAndValuesArrLen}
    \    ${locatorColumnNamesAndValues}    Evaluate    ${locatorColumnNamesAndValuesArr}[${i}]
    \    ${inputColumnNamesAndValues}    Evaluate    ${inputColumnNamesAndValuesArr}[${i}]
    \    Map_AppRepeater_编辑行    ${tableId}    ${locatorColumnNamesAndValues}    ${inputColumnNamesAndValues}

Map_AppRepeater_批量编辑多行_根据序号
    [Arguments]    ${tableId}    ${rowNumberColumnName}    ${inputData}    ${inputColumnNames}=    ${rowFilterCondition}=
    [Documentation]    *功能：*
    ...
    ...    批量编辑多行_根据序号
    ...
    ...    *参数说明：*
    ...
    ...    tableId:Repeater控件对应的table元素的id
    ...
    ...    rowNumberColumnName：序号对应的列名
    ...
    ...    inputData : 要输入的数据，一个二维数组，数组的第一个元素是列头集合,其他元素为数据行。格式如下：
    ...
    ...    [['columnA','columnB','columnC','columnD'],[23,'aa','bb',100],[55,'cc','dd',200]]
    ...
    ...    inputColumnNames：需要输入的列头集合，列与列之间用&连接，如columnC&columnD；不填表示除序号列之外，所有列都要输入。
    ...
    ...    rowFilterCondition：过滤数据记录条件，格式为 columnA=value1&columnB=value2；默认值为空，表示所有数据行。
    ...
    ...    *示例：*
    ...
    ...    ${inputData} | Evaluate | [[u'序号',u'款项类型',u'款项名称',u'计划付款金额',u'计划付款日期',u'付款说明'],[1,u'工程合同款',u'进度款',1234,u'2014-09-28',u'说明说明111'],[2,u'应扣款',u'代付代扣款',4567.89,u'2014-10-22',u'说明说明322']]
    ...
    ...    Map_AppRepeater_批量编辑行_根据序号 | Repeater1 | 序号 | ${inputData} | 计划付款金额&付款说明
    ${isContainData}    _checkTwoDimensionArrayContainsData    ${inputData}
    Return From Keyword If    '${isContainData}' == '0'
    ${splitStr}    Evaluate    u'^'
    ${inputColumnNamesAndValuesList}    ${rowNumberList}    _buildBatchInputVars_containRowNumberColumn    ${inputData}    ${rowNumberColumnName}    ${inputColumnNames}    ${rowFilterCondition}
    ...    ${splitStr}
    Return From Keyword If    '${inputColumnNamesAndValuesList}'=='' or '${rowNumberList}' == ''
    ${rowNumberArr}    Evaluate    u'${rowNumberList}'.split('${splitStr}')
    ${inputColumnNamesAndValuesArr}    Evaluate    u'${inputColumnNamesAndValuesList}'.split('${splitStr}')
    ${rowCount}    Evaluate    len(${rowNumberArr})
    : FOR    ${i}    IN RANGE    ${rowCount}
    \    ${rowNumber}    Evaluate    ${rowNumberArr}[${i}]
    \    ${inputColumnNamesAndValues}    Evaluate    ${inputColumnNamesAndValuesArr}[${i}]
    \    Map_AppRepeater_编辑行_根据序号    ${tableId}    ${rowNumber}    ${inputColumnNamesAndValues}

Map_AppRepeater_批量编辑多行_按钮操作
    [Arguments]    ${tableId}    ${locatorAndInputData}    ${locatorColumnNames}    ${inputColumnNames}    ${rowFilterCondition}=    ${addNewButtonIframe}=
    ...    ${addNewButtonMenuText}=新增
    [Documentation]    *功能：*
    ...
    ...    批量新增多行（包括点击新增按钮和录入行数据）
    ...
    ...    *参数说明：*
    ...
    ...    tableId：控件对应的table元素的id
    ...
    ...    locatorAndInputData : 用来定位行及要输入的数据，是一个二维数组，数组的第一个元素是列头集合,其他元素为数据行。格式如下：
    ...
    ...    [['columnA','columnB','columnC','columnD'],[23,'aa','bb',100],[55,'cc','dd',200]]
    ...
    ...
    ...    locatorColumnNames ：用于定位的列头集合，列与列之间用&连接，如columnA&columnB
    ...
    ...    inputColumnNames ：需要输入值的列头集合，列与列之间用&连接，如columnC&columnD
    ...
    ...    rowFilterCondition：过滤数据记录条件，格式为 columnA=value1&columnB=value2；默认值为空，表示所有数据行。
    ...
    ...    addNewButtonIframe：新增按钮所在的iframe(绝对路径)，如果新增按钮iframe在AppRepeater在同一个iframe，则不用传此参数。
    ...
    ...    addNewButtonMenuText：新增按钮的文本，默认值为“新增”
    ...
    ...    *示例：*
    ...
    ...    ${locatorAndInputData} | Evaluate | [[u'序号',u'款项类型',u'款项名称',u'计划付款金额',u'计划付款日期',u'付款说明'],[1,u'工程合同款',u'进度款',1234,u'2014-09-28',u'说明说明111'],[2,u'应扣款',u'代付代扣款',4567.89,u'2014-10-22',u'说明说明322']]
    ...
    ...    Map_AppRepeater_批量编辑多行_按钮操作 | table1 | ${locatorAndInputData} | 序号 | 款项类型&款项名称&计划付款金额&计划付款日期&付款说明
    ${isContainData}    _checkTwoDimensionArrayContainsData    ${locatorAndInputData}
    Return From Keyword If    '${isContainData}' == '0'
    ${splitStr}    Evaluate    u'^'
    ${locatorColumnNamesAndValuesList}    ${inputColumnNamesAndValuesList}    _buildBatchLocatorAndInputVars    ${locatorAndInputData}    ${locatorColumnNames}    ${inputColumnNames}    ${rowFilterCondition}
    ...    ${splitStr}
    Return From Keyword If    '${locatorColumnNamesAndValuesList}'=='' or '${inputColumnNamesAndValuesList}' == ''
    ${locatorColumnNamesAndValuesArr}    Evaluate    u'${locatorColumnNamesAndValuesList}'.split('${splitStr}')
    ${inputColumnNamesAndValuesArr}    Evaluate    u'${inputColumnNamesAndValuesList}'.split('${splitStr}')
    ${columnNamesAndValuesArrLen}    Evaluate    len(${locatorColumnNamesAndValuesArr})
    ${rowCount}    Map_AppRepeater_获取记录条数    ${tableId}
    : FOR    ${i}    IN RANGE    ${rowCount}
    \    ${locatorColumnNamesAndValues}    Evaluate    ${locatorColumnNamesAndValuesArr}[${i}]
    \    ${inputColumnNamesAndValues}    Evaluate    ${inputColumnNamesAndValuesArr}[${i}]
    \    Map_AppRepeater_编辑行    ${tableId}    ${locatorColumnNamesAndValues}    ${inputColumnNamesAndValues}
    Return From Keyword If    ${rowCount} >= ${columnNamesAndValuesArrLen}
    ${parentIframe}    _getParentIframe
    ${currentIframe}    _getCurrentIframe
    : FOR    ${i}    IN RANGE    ${rowCount}    ${columnNamesAndValuesArrLen}
    \    run keyword if    '${addNewButtonIframe}'!=''    unselect frame
    \    run keyword if    '${addNewButtonIframe}'!=''    select frame    ${addNewButtonIframe}
    \    Map_AppGridMenu_点击列表菜单项    ${addNewButtonMenuText}
    \    ${locatorColumnNamesAndValues}    Evaluate    ${locatorColumnNamesAndValuesArr}[${i}]
    \    ${inputColumnNamesAndValues}    Evaluate    ${inputColumnNamesAndValuesArr}[${i}]
    \    unselect frame
    \    run keyword if    '${parentIframe}'==''    select frame    ${currentIframe}    ELSE    select frame
    \    ...    ${parentIframe}/${currentIframe}
    \    Map_AppRepeater_编辑行    ${tableId}    ${locatorColumnNamesAndValues}    ${inputColumnNamesAndValues}

Map_AppRepeater_批量编辑多行_按钮操作_根据序号
    [Arguments]    ${tableId}    ${inputData}    ${rowNumberColumnName}    ${inputColumnNames}=    ${rowFilterCondition}=    ${addNewButtonIframe}=
    ...    ${addNewButtonMenuText}=新增
    [Documentation]    *功能：*
    ...
    ...    批量新增多行_根据序号（包括点击新增按钮和录入行数据）
    ...
    ...    *参数说明：*
    ...
    ...    tableId：控件对应的table元素的id
    ...
    ...    inputData : 要输入的数据，一个二维数组，数组的第一个元素是列头集合,其他元素为数据行。格式如下：
    ...
    ...    [['columnA','columnB','columnC','columnD'],[23,'aa','bb',100],[55,'cc','dd',200]]
    ...
    ...    rowNumberColumnName：序号对应的列名
    ...
    ...    inputColumnNames：需要输入的列头集合，列与列之间用&连接，如columnC&columnD；不填表示除序号列之外，所有列都要输入。
    ...
    ...    rowFilterCondition：过滤数据记录条件，格式为 columnA=value1&columnB=value2；默认值为空，表示所有数据行。
    ...
    ...    addNewButtonIframe：新增按钮所在的iframe(绝对路径)，如果新增按钮iframe与apprepeater在同一个iframe，则不用传此参数。
    ...
    ...    addNewButtonMenuText：新增按钮的文本，默认值为“新增”
    ...
    ...    *示例：*
    ...
    ...    ${inputData} | Evaluate | [[u'序号',u'款项类型',u'款项名称',u'计划付款金额',u'计划付款日期',u'付款说明'],[1,u'工程合同款',u'进度款',1234,u'2014-09-28',u'说明说明111'],[2,u'应扣款',u'代付代扣款',4567.89,u'2014-10-22',u'说明说明322']]
    ...
    ...    Map_AppRepeater_批量编辑多行_按钮操作_根据序号 | table1 | ${inputData} | 序号 | 计划付款金额&付款说明
    ${isContainData}    _checkTwoDimensionArrayContainsData    ${inputData}
    Return From Keyword If    '${isContainData}' == '0'
    ${splitStr}    Evaluate    u'^'
    ${inputColumnNamesAndValuesList}    ${rowNumberList}    _buildBatchInputVars_containRowNumberColumn    ${inputData}    ${rowNumberColumnName}    ${inputColumnNames}    ${rowFilterCondition}
    ...    ${splitStr}
    Return From Keyword If    '${inputColumnNamesAndValuesList}'=='' or '${rowNumberList}' == ''
    ${rowNumberArr}    Evaluate    u'${rowNumberList}'.split('${splitStr}')
    ${inputColumnNamesAndValuesArr}    Evaluate    u'${inputColumnNamesAndValuesList}'.split('${splitStr}')
    ${dataRowCount}    Evaluate    len(${rowNumberArr})
    ${recordCount}    Map_AppRepeater_获取记录条数    ${tableId}
    : FOR    ${i}    IN RANGE    ${recordCount}
    \    ${rowNumber}    Evaluate    ${rowNumberArr}[${i}]
    \    ${inputColumnNamesAndValues}    Evaluate    ${inputColumnNamesAndValuesArr}[${i}]
    \    Map_AppRepeater_编辑行_根据序号    ${tableId}    ${rowNumber}    ${inputColumnNamesAndValues}
    Return From Keyword If    ${recordCount} >= ${dataRowCount}
    ${parentIframe}    _getParentIframe
    ${currentIframe}    _getCurrentIframe
    : FOR    ${i}    IN RANGE    ${recordCount}    ${dataRowCount}
    \    run keyword if    '${addNewButtonIframe}'!=''    unselect frame
    \    run keyword if    '${addNewButtonIframe}'!=''    select frame    ${addNewButtonIframe}
    \    Map_AppGridMenu_点击列表菜单项    ${addNewButtonMenuText}
    \    ${rowNumber}    Evaluate    ${rowNumberArr}[${i}]
    \    ${inputColumnNamesAndValues}    Evaluate    ${inputColumnNamesAndValuesArr}[${i}]
    \    unselect frame
    \    run keyword if    '${parentIframe}'==''    select frame    ${currentIframe}    ELSE    select frame
    \    ...    ${parentIframe}/${currentIframe}
    \    Map_AppRepeater_编辑行_根据序号    ${tableId}    ${rowNumber}    ${inputColumnNamesAndValues}

Map_AppRepeater_点击单元格内链接
    [Arguments]    ${tableId}    ${columnNamesAndValues}    ${linkColumnName}    ${linkText}
    [Documentation]    *功能：*
    ...
    ...    点击某一行中某一列的超链接
    ...
    ...    *参数说明：*
    ...
    ...    tableId ：Repeater控件对应的table元素的id
    ...
    ...    columnNamesAndValues : 用来定位行的列标头和对应的字段值(行标题有换行的用|表示),格式为column1=value1&column2=value2；如果列名中包含=，请用*eq*代替
    ...
    ...    linkColumnName ：超链接所在列名(行标题有换行的用|表示)
    ...
    ...    linkText ： 超链接文本
    ...
    ...    *示例：*
    ...
    ...    Map_AppRepeater_点击单元格内链接 | tblBudget | 项目名称=216165-56546564&合约规划名称=合作款项 | 操作 | 查看详细
    Return From Keyword If    '${linkColumnName}'==''
    ${rowIndex}    ${columnIndex}    _getRepeaterCellLocation    ${tableId}    ${columnNamesAndValues}    ${linkColumnName}
    click link    //table[@id='${tableId}']//tr[${rowIndex}+1]//td[${columnIndex}+1]//a[text()='${linkText}']

Map_AppRepeater_含树_点击单元格内链接
    [Arguments]    ${tableId}    ${levelColumnName}    ${treePath}    ${targetColumnName}    ${linkText}
    [Documentation]    *功能：*
    ...
    ...    点击指定单元格内的链接
    ...
    ...    *参数说明：*
    ...
    ...    tableId:控件对应table元素的id
    ...
    ...    levelColumnName : 层级所在列名
    ...
    ...    treePath : 逐级展开的层次路径
    ...
    ...    targetColumnName : 目标列名(行标题有换行的用|表示)
    ...
    ...    linkText ： 链接文本
    ...
    ...    *示例：*
    ...
    ...    Map_AppRepeater_含树_点击单元格内链接 | Table1 | 科目名称 | 项目成本(A)/开发成本(A.01)/土地费(A.01.01)/土地取得价款(A.01.01.01)/土地取得价款 | 待发生合约规划 | 详细
    ${targetColumnIndex}    _getColumnIndex_Repeater    ${tableId}    ${targetColumnName}
    ${selectRowIndex}    _expandTreeRepeater    ${tableId}    ${levelColumnName}    ${treePath}
    click link    //table[@id='${tableId}']//tr[${selectRowIndex}+1]//td[${targetColumnIndex}+1]//a[normalize-space(text())='${linkText}']

Map_AppRepeater_点击单元格内图片
    [Arguments]    ${tableId}    ${columnNamesAndValues}    ${imgColumnName}    ${needClickImage}=1
    [Documentation]    *功能：*
    ...
    ...    点击某一行中某一列的图片
    ...
    ...    *参数说明：*
    ...
    ...    tableId ：Repeater控件对应的table元素的id
    ...
    ...    columnNamesAndValues : 用来定位行的列标头和对应的字段值(行标题有换行的用|表示),格式为column1=value1&column2=value2；如果列名中包含=，请用*eq*代替
    ...
    ...    limgColumnName ：图片所在列名(行标题有换行的用|表示)
    ...
    ...
    ...    *示例：*
    ...
    ...    Map_AppRepeater_点击单元格内图片 | tblBudget | 项目名称=216165-56546564&合约规划名称=合作款项 | 选择
    ${needNext}    run keyword if    '${needClickImage}'==''    Evaluate    0    ELSE    Evaluate
    ...    1
    Return From Keyword If    '${needClickImage}'==''    ${needNext}
    ${rowIndex}    ${columnIndex}    _getRepeaterCellLocation    ${tableId}    ${columnNamesAndValues}    ${imgColumnName}
    ${disabled}    Get Element Attribute    //table[@id='${tableId}']//tr[${rowIndex}+1]//td[${columnIndex}+1]//img@disabled
    Run Keyword And Continue On Failure    run keyword if    '${disabled}'=='disabled' or '${disabled}'=='true'    fail    列${imgColumnName}内的图片禁用，无法点击
    Return From Keyword If    '${disabled}'=='disabled' or '${disabled}'=='true'    0
    click image    //table[@id='${tableId}']//tr[${rowIndex}+1]//td[${columnIndex}+1]//img
    Return From Keyword    1
    [Return]    ${needNext}

Map_AppRepeater_检查单元格是否可以编辑
    [Arguments]    ${tableId}    ${columnNamesAndValues}    ${checkColumnName}
    [Documentation]    *功能：*
    ...
    ...    返回单元格是否可以编辑
    ...
    ...    *参数说明：*
    ...
    ...    tableId ：Repeater控件对应的table元素的id
    ...
    ...    columnNamesAndValues : 用来定位行的列标头和对应的字段值(行标题有换行的用|表示)，格式为column1=value1&column2=value2；如果列名中包含=，请用*eq*代替
    ...
    ...    checkColumnName ：需要检查的列名(行标题有换行的用|表示)
    ...
    ...    *返回值：*
    ...
    ...    isEditable ： 1 ：可以编辑 0：只读
    ...
    ...    *示例：*
    ...
    ...    ${isEditable} | Map_AppRepeater_检查单元格是否可以编辑 | tblBudget | 项目名称=216165-56546564&合约规划名称=合作款项 | 分摊金额
    ${rowIndex}    ${columnIndex}    _getRepeaterCellLocation    ${tableId}    ${columnNamesAndValues}    ${checkColumnName}
    ${isEditable}    _checkTabelCellIsEditable    ${tableId}    ${rowIndex}    ${columnIndex}
    [Return]    ${isEditable}

Map_AppRepeater_获取记录条数
    [Arguments]    ${tableId}
    [Documentation]    *功能：*
    ...
    ...    获取记录条数
    ...
    ...    *参数说明：*
    ...
    ...    tableId ：Repeater控件对应的table元素的id
    ...
    ...    *返回值：*
    ...
    ...    rowCount : 记录数
    ...
    ...    *示例：*
    ...
    ...    ${rowCount} | Map_AppRepeater_获取记录条数 | table1
    ${rowCount}    _getTableRowCount    ${tableId}
    ${rowCount}    Evaluate    int('${rowCount}')-1
    [Return]    ${rowCount}

_getRepeaterTRAndAction
    [Arguments]    ${tableId}    ${columnNamesAndValues}    ${action}
    [Documentation]    ====内部方法，不对外使用====
    ...
    ...    *功能：*
    ...
    ...    获取Repeater控件对应的table元素对应的行，并执行单击或双击操作
    ...
    ...    *参数说明：*
    ...
    ...    table: 控件对应的table元素的id
    ...
    ...    columnNamesAndValues ：用于定位行的列标头和对应的字段值(行标题有换行的用|表示)
    ...
    ...    action ： 要执行的操作 1：点击 2：双击
    ${rowIndexToAction}    _getRepeaterTR    ${tableId}    ${columnNamesAndValues}
    #执行指定的操作
    run keyword if    '${action}'=='1'    click element    //table[@id='${tableId}']//tr[${rowIndexToAction}+1]    ELSE    Double Click Element    //table[@id='${tableId}']//tr[${rowIndexToAction}+1]
    #勾选可能的checkbox
    Execute Javascript    var rowIndexToAction=${rowIndexToAction};var table=window.document.getElementById('${tableId}');var tr=table.rows[rowIndexToAction];var inputs=tr.getElementsByTagName('input');if(inputs&&inputs.length>0){for(var i=0;i<inputs.length;i++){if(inputs[i].type=='checkbox'){var Css = document.defaultView.getComputedStyle(inputs[i], null);if (Css.display != "none"){inputs[i].click();inputs[i].checked=true;break;}}}}

_getRepeaterCellLocation
    [Arguments]    ${tableId}    ${columnNamesAndValues}    ${targetColumnName}
    [Documentation]    ====内部方法，不对外使用====
    ...
    ...
    ...    *功能：*
    ...
    ...    获取某个单元格的位置
    ...
    ...    *参数说明：*
    ...
    ...    tableId ：Repeater控件对应的table元素的id
    ...
    ...    columnNamesAndValues : 用来定位行的列标头和对应的字段值(行标题有换行的用|表示)
    ...
    ...    targetColumnName ：目标列名(行标题有换行的用|表示)
    ...
    ...    *返回值：*
    ...
    ...    rowIndex ： 单元格所在的行索引
    ...
    ...    columnIndex ：单元格所在的列索引
    ...
    ...    *示例：*
    ...
    ...    ${rowIndex} | ${columnIndex} | _getRepeaterCellLocation | tblBudget | 项目名称=216165-56546564&合约规划名称=合作款项 | 费用科目
    ${columnNameList}    ${valueList}    _parseQueryStringToArray    ${columnNamesAndValues}
    ${headerMode}    _getRepeaterHeaderMode    ${tableId}
    #set locate column index info
    ${locateColumnIndexInfo}    _myExecuteJS    function rp(s){while(s.indexOf('　')>-1||s.indexOf(' ')>-1)s=s.replace('　','').replace(' ','');return s;};function formatObject(o){var s='';for(var key in o){s+=key+':'+o[key]+' ';}return s;};function checkColumnMatched(columnInnerText,columnName){if(columnName.indexOf('|')>-1){var textArr=columnName.split('|');var text1=textArr[0];var text2=textArr[1];return(columnInnerText.indexOf(text1)>-1&&columnInnerText.indexOf(text2)>-1);}else{return columnInnerText==columnName;}};var tableId='${tableId}';var table=window.document.getElementById(tableId);if(!table){return'0|||封装提示信息：未找到id为"'+tableId+'"的table元素，请检查是否正确的传入tableId，或者进入了正确的iframe';}var rowHeader=table.rows[0];var columnNames=${columnNameList};var headerMode=${headerMode};var dicColumnAndIndex={};var foundColumn;if(headerMode==1){for(var i=0;i<columnNames.length;i++){foundColumn=false;for(var j=0;j<rowHeader.cells.length;j+=2){if(rowHeader.cells[j].innerText&&checkColumnMatched(rp(rowHeader.cells[j].innerText),columnNames[i])){dicColumnAndIndex[columnNames[i]]=parseInt(j/2);foundColumn=true;break;}}if(!foundColumn){return'0|||封装提示信息：未找到列"'+columnNames[i]+'"，请检查参数是否正确';}}table.dicColumnAndIndex=dicColumnAndIndex;return'1|||'+formatObject(dicColumnAndIndex);}else if(headerMode==2){for(var i=0;i<columnNames.length;i++){foundColumn=false;for(var j=0;j<rowHeader.cells.length;j++){if(rowHeader.cells[j].innerText&&checkColumnMatched(rp(rowHeader.cells[j].innerText),columnNames[i])){dicColumnAndIndex[columnNames[i]]=j;foundColumn=true;break;}}if(!foundColumn){return'0|||封装提示信息：未找到列"'+columnNames[i]+'"，请检查参数是否正确';}}table.dicColumnAndIndex=dicColumnAndIndex;return'1|||'+formatObject(dicColumnAndIndex);}
    #目标列对应的列索引
    ${columnIndex}    _myExecuteJS    function rp(s){while(s.indexOf('　')>-1||s.indexOf(' ')>-1)s=s.replace('　','').replace(' ','');return s;};function checkColumnMatched(columnInnerText,columnName){if(columnName.indexOf('|')>-1){var textArr=columnName.split('|');var text1=textArr[0];var text2=textArr[1];return(columnInnerText.indexOf(text1)>-1&&columnInnerText.indexOf(text2)>-1);}else{return columnInnerText==columnName;}};var table=window.document.getElementById('${tableId}');var rowHeader=table.rows[0];var targetColumnName='${targetColumnName}';var headerMode=${headerMode};if(headerMode==1){for(var i=0;i<rowHeader.cells.length;i+=2){if(checkColumnMatched(rp(rowHeader.cells[i].innerText),targetColumnName)){return'1|||'+parseInt(i/2);}}}else if(headerMode==2){for(var i=0;i<rowHeader.cells.length;i++){if(checkColumnMatched(rp(rowHeader.cells[i].innerText),targetColumnName)){return'1|||'+i;}}}return'0|||封装提示信息：目标列"'+targetColumnName+'"不存在，请检查参数是否正确';
    #满足条件的行索引
    ${rowIndex}    _myExecuteJS    var columnIndexList=[];var columnNames=${columnNameList};var valueList=${valueList};var matched;var tableId='${tableId}';var gridData=window.document.getElementById(tableId);if(!gridData){return'0|||封装提示信息：未找到id为"'+tableId+'"的table元素，请检查是否正确的传入tableId，或者进入了正确的iframe';}var dicColumnAndIndex=gridData.dicColumnAndIndex;function checkMatch(cell,value){var inputs=cell.getElementsByTagName('input');if(inputs&&inputs.length>0){return(inputs[0].value==value);}var selects=cell.getElementsByTagName('select');if(selects&&selects.length>0){var select=selects[0];return select.options[select.selectedIndex].text==value;}return cell.innerText==value;}for(var i=0;i<columnNames.length;i++)columnIndexList.push(dicColumnAndIndex[columnNames[i]]);for(var i=1;i<gridData.rows.length;i++){matched=true;for(var j=0;j<columnIndexList.length;j++){matched=matched&&checkMatch(gridData.rows[i].cells[columnIndexList[j]],valueList[j]);}if(matched){return'1|||'+i;}}return'0|||封装提示信息：未找到满足条件的行，请检查参数是否正确';
    [Return]    ${rowIndex}    ${columnIndex}

_getRepeaterHeaderMode
    [Arguments]    ${tableId}
    [Documentation]    ====内部方法，不对外使用====
    ...
    ...    *功能：*
    ...
    ...    获取Repeater控件对应的table元素的标头样式
    ...
    ...    *参数说明：*
    ...
    ...    table: 控件对应的table元素的id
    ...
    ...    *返回值说明：*
    ...
    ...    headerMode ：
    ...    1：表头具有单独的单元格作为列名之间的分割，一般是TD里面放了一张图片(ERP系统大部分是这个情况)
    ...    2：表头没有单独的单元格，一般有css样式形成分割效果
    ${headerMode}    _myExecuteJS    var headerMode=1;var tableId='${tableId}';var table=window.document.getElementById(tableId);if(!table){return'0|||封装提示信息：不存在id为"'+tableId+'"的table元素，请检查是否传入了错误的tableId或者是否进入了正确的iframe';}var headerRowCellCount=table.rows[0].cells.length;var dataRowCellCount=table.rows[table.rows.length-1].cells.length;if(headerRowCellCount==dataRowCellCount*2){return'1|||1';}else if(headerRowCellCount==dataRowCellCount){return'1|||2';}return'1|||1';
    [Return]    ${headerMode}

_getRepeaterTR
    [Arguments]    ${tableId}    ${columnNamesAndValues}
    [Documentation]    ====内部方法，不对外使用====
    ...
    ...    *功能：*
    ...
    ...    获取Repeater控件对应的table元素对应的行索引
    ...
    ...    *参数说明：*
    ...
    ...    table: 控件对应的table元素的id
    ...
    ...    columnNamesAndValues ：用于定位行的列标头和对应的字段值(行标题有换行的用|表示)
    ...
    ...    *返回值说明：*
    ...
    ...    rowIndexToAction ：满足条件的行索引
    ${columnNameList}    ${valueList}    _parseQueryStringToArray    ${columnNamesAndValues}
    ${headerMode}    _getRepeaterHeaderMode    ${tableId}
    #获取列名对应的索引位置信息
    ${locateColumnIndexInfo}    _myExecuteJS    function rp(s){while(s.indexOf('　')>-1||s.indexOf(' ')>-1)s=s.replace('　','').replace(' ','');return s;};function formatObject(o){var s='';for(var key in o){s+=key+':'+o[key]+' ';}return s;};function checkColumnMatched(columnInnerText,columnName){if(columnName.indexOf('|')>-1){var textArr=columnName.split('|');var text1=textArr[0];var text2=textArr[1];return(columnInnerText.indexOf(text1)>-1&&columnInnerText.indexOf(text2)>-1);}else{return columnInnerText==columnName;}};var tableId='${tableId}';var table=window.document.getElementById(tableId);if(!table){return'0|||封装提示信息：未找到id为"'+tableId+'"的table元素，请检查是否正确的传入tableId，或者进入了正确的iframe';}var rowHeader=table.rows[0];var columnNames=${columnNameList};var headerMode=${headerMode};var dicColumnAndIndex={};var foundColumn;if(headerMode==1){for(var i=0;i<columnNames.length;i++){foundColumn=false;for(var j=0;j<rowHeader.cells.length;j+=2){if(rowHeader.cells[j].innerText&&checkColumnMatched(rp(rowHeader.cells[j].innerText),columnNames[i])){dicColumnAndIndex[columnNames[i]]=parseInt(j/2);foundColumn=true;break;}}if(!foundColumn){return'0|||封装提示信息：未找到列"'+columnNames[i]+'"，请检查参数是否正确';}}table.dicColumnAndIndex=dicColumnAndIndex;return'1|||'+formatObject(dicColumnAndIndex);}else if(headerMode==2){for(var i=0;i<columnNames.length;i++){foundColumn=false;for(var j=0;j<rowHeader.cells.length;j++){if(rowHeader.cells[j].innerText&&checkColumnMatched(rp(rowHeader.cells[j].innerText),columnNames[i])){dicColumnAndIndex[columnNames[i]]=j;foundColumn=true;break;}}if(!foundColumn){return'0|||封装提示信息：未找到列"'+columnNames[i]+'"，请检查参数是否正确';}}table.dicColumnAndIndex=dicColumnAndIndex;return'1|||'+formatObject(dicColumnAndIndex);}
    #获取要执行操作的行索引
    ${rowIndexToAction}    _myExecuteJS    var columnIndexList=[];var columnNames=${columnNameList};var valueList=${valueList};var columnNamesAndValues='${columnNamesAndValues}';var matched;var tableId='${tableId}';var gridData=window.document.getElementById(tableId);if(!gridData){return'0|||封装提示信息：未找到id为"'+tableId+'"的table元素，请检查是否正确的传入tableId，或者进入了正确的iframe';}var dicColumnAndIndex=gridData.dicColumnAndIndex;function checkMatch(cell,value){var inputs=cell.getElementsByTagName('input');if(inputs&&inputs.length>0){return(inputs[0].value==value);}var selects=cell.getElementsByTagName('select');if(selects&&selects.length>0){var select=selects[0];return select.options[select.selectedIndex].text==value;}return cell.innerText==value;}for(var i=0;i<columnNames.length;i++)columnIndexList.push(dicColumnAndIndex[columnNames[i]]);for(var i=1;i<gridData.rows.length;i++){matched=true;for(var j=0;j<columnIndexList.length;j++){matched=matched&&checkMatch(gridData.rows[i].cells[columnIndexList[j]],valueList[j]);}if(matched){return'1|||'+i;}}return'0|||封装提示信息：未找到满足条件"'+columnNamesAndValues+'"的行，请检查参数是否正确';
    [Return]    ${rowIndexToAction}

_getColumnIndex_Repeater
    [Arguments]    ${tableId}    ${targetColumnName}
    [Documentation]    ====内部方法，不对外使用====
    ...
    ...    *功能：*
    ...
    ...    获取Repeater某列的列索引
    ...
    ...    *参数说明：*
    ...
    ...    tableId: 控件对应的table元素的id
    ...
    ...    targetColumnName ：目标列列名
    ...
    ...    *返回值说明：*
    ...
    ...    columnIndex ：目标列列索引
    ${headerMode}    _getRepeaterHeaderMode    ${tableId}
    ${columnIndex}    _myExecuteJS    function rp(s){while(s.indexOf('　')>-1||s.indexOf(' ')>-1)s=s.replace('　','').replace(' ','');return s;};var headerMode=${headerMode};var tableId='${tableId}';var targetColumnName='${targetColumnName}';var rowHeader=window.document.getElementById(tableId).rows[0];for(var i=0;i<rowHeader.cells.length;i++){if(rowHeader.cells[i].innerText&&rp(rowHeader.cells[i].innerText)==targetColumnName){if(headerMode==1){return'1|||'+parseInt(i/2);}else if(headerMode==2){return'1|||'+i;}}}return'0|||封装提示信息：目标列"'+targetColumnName+'"不存在，请检查参数是否正确';
    [Return]    ${columnIndex}

_expandTreeRepeater
    [Arguments]    ${tableId}    ${levelColumnName}    ${treePath}
    [Documentation]    ====内部方法，不对外使用====
    ...
    ...    *功能：*
    ...
    ...    展开Repeater某列的树结构
    ...
    ...    *参数说明：*
    ...
    ...    tableId:控件对应table元素的id
    ...
    ...    levelColumnName : 层级所在列名
    ...
    ...    treePath : 逐级展开的层次路径
    ...
    ...    *返回值说明：*
    ...
    ...    selectedRowIndex ：最后一级树节点行索引
    ${levelColumnIndex}    _getColumnIndex_Repeater    ${tableId}    ${levelColumnName}
    ${pathArr}    Evaluate    u'${treePath}'.split('/')
    ${pathArrLen}    Evaluate    len(${pathArr})
    ${j}    Evaluate    int(${pathArrLen})-1
    #收缩树节点
    _myExecuteJS    var levelColumnIndex=${levelColumnIndex};var table=window.document.getElementById('${tableId}');var cell=table.rows[1].cells[levelColumnIndex];var labels=cell.getElementsByTagName('label');for(var j=0;j<labels.length;j++){if(labels[j].innerHTML=='[-]'){labels[j].click();}}
    : FOR    ${i}    IN RANGE    ${pathArrLen}
    \    Run Keyword If    ${i} < ${j}    _myExecuteJS    function rp(s){while(s.indexOf('　')>-1||s.indexOf(' ')>-1)s=s.replace('　','').replace(' ','');return s;};var table=window.document.getElementById('${tableId}');var levelColumnIndex=${levelColumnIndex};var nodeName='${pathArr[${i}]}';var rows=table.rows;for(var s=1;s<rows.length;s++){if(!(rows[s].style&&rows[s].style.display&&rows[s].style.display=='none')&&rows[s].cells[levelColumnIndex].innerText&&(rp(rows[s].cells[levelColumnIndex].innerText)=='[+]'+rp(nodeName)||rp(rows[s].cells[levelColumnIndex].innerText)=='[-]'+rp(nodeName))){var labels=rows[s].cells[levelColumnIndex].getElementsByTagName('label');for(var label in labels){if(labels[label].innerHTML=='[+]'){labels[label].click();}}return;}}return'0|||封装提示信息：未找到节点"'+nodeName+'"，请检查参数是否正确'    ELSE    _myExecuteJS
    \    ...    function rp(s){while(s.indexOf('　')>-1||s.indexOf(' ')>-1)s=s.replace('　','').replace(' ','');return s;};var table=window.document.getElementById('${tableId}');var levelColumnIndex=${levelColumnIndex};var lastPath='${pathArr[${i}]}';var rows=table.rows;var currentRow;for(var i=1;i<rows.length;i++){currentRow=rows[i];if(!(currentRow.style&&currentRow.style.display&&currentRow.style.display=='none')&&currentRow.cells&&currentRow.cells[levelColumnIndex]&&currentRow.cells[levelColumnIndex].innerText&&rp(currentRow.cells[levelColumnIndex].innerText.replace('[+]','').replace('[-]',''))==rp(lastPath)){var Css = document.defaultView.getComputedStyle(currentRow, null);if (Css.display != "none"){currentRow.fireEvent('onclick');table.setAttribute('selectedRowIndex',currentRow.rowIndex);return;}}}return'0|||封装提示信息：未找到节点"'+lastPath+'"，请检查参数是否正确'
    \    sleep    1500ms
    ${selectRowIndex}    Get Element Attribute    //table[@id='${tableId}']@selectedRowIndex
    [Return]    ${selectRowIndex}
