*** Settings ***
Documentation     封装AppGrid控件的一些操作
Library           Selenium2Library
Resource          通用工具方法.txt
Resource          通用操作封装.txt

*** Keywords ***
Map_AppGrid_选中行
    [Arguments]    ${columnNamesAndValues}
    [Documentation]    *功能：*
    ...
    ...    通过列表头和对应的值选中某一行
    ...
    ...    *参数说明：*
    ...
    ...    columnNamesAndValues：列表头和对应的值,格式为column1=value1&column2=value2；如果列名或值中包含=，请用*eq*代替
    ...
    ...    *示例：*
    ...
    ...    Map_AppGrid_选中行 | 合同编号=xrqcb-002-2013-09-0003
    ...
    ...    *注意：*
    ...
    ...    调用前需切入AppGrid控件所在的顶层iframe(一般为appGrid)，不要切到数据行所在的ifrmGrid了
    Return From Keyword If    '${columnNamesAndValues}'=='' or '${columnNamesAndValues}'=='[NULL]'
    _selectRowAndExecuteAction_AppGrid    ${columnNamesAndValues}    1

Map_AppGrid_选中行_根据序号
    [Arguments]    ${rowNumber}
    [Documentation]    *功能：*
    ...
    ...    通过序号选中某一行
    ...
    ...    *参数说明：*
    ...
    ...    rowNumber：序号，从1开始
    ...
    ...    *示例：*
    ...
    ...    Map_AppGrid_选中行_根据序号 | 10
    Return From Keyword If    '${rowNumber}'=='' or '${rowNumber}'=='[NULL]'
    _selectRowAndExecuteAction_AppGrid_byRowNumber    ${rowNumber}    1

Map_AppGrid_双击行
    [Arguments]    ${columnNamesAndValues}
    [Documentation]    *功能：*
    ...
    ...    通过列表头和对应的值选中某一行
    ...
    ...    *参数说明：*
    ...
    ...    columnNamesAndValues：列表头和对应的值，格式为column1=value1&column2=value2；如果列名或值中包含=，请用*eq*代替
    ...
    ...    *示例：*
    ...
    ...    Map_AppGrid_双击行 | 合同编号=xrqcb-002-2013-09-0003
    ...
    ...    *注意：*
    ...
    ...    调用前需切入AppGrid控件所在的顶层iframe(一般为appGrid)，不要切到数据行所在的ifrmGrid了
    Return From Keyword If    '${columnNamesAndValues}'=='' or '${columnNamesAndValues}'=='[NULL]'
    _selectRowAndExecuteAction_AppGrid    ${columnNamesAndValues}    2

Map_AppGrid_双击行_根据序号
    [Arguments]    ${rowNumber}
    [Documentation]    *功能：*
    ...
    ...    通过序号双击某一行
    ...
    ...    *参数说明：*
    ...
    ...    rowNumber：序号，从1开始
    ...
    ...    *示例：*
    ...
    ...    Map_AppGrid_双击行_根据序号 | 10
    Return From Keyword If    '${rowNumber}'=='' or '${rowNumber}'=='[NULL]'
    _selectRowAndExecuteAction_AppGrid_byRowNumber    ${rowNumber}    2

Map_AppGrid_获取单元格位置
    [Arguments]    ${locatorColumnNamesAndValues}    ${targetColumnName}
    [Documentation]    *功能：*
    ...
    ...    获取AppGrid中指定单元格所在位置
    ...
    ...    *参数说明：*
    ...
    ...    locatorColumnNamesAndValues：行定位信息，列表头和对应的值， 格式为column1=value1&column2=value2；如果列名或值中包含=，请用*eq*代替
    ...
    ...    targetColumnName ： 目标单元格对应的列标头名称
    ...
    ...    *返回值说明：*
    ...
    ...    tableId：单元格所在Table元素的ID
    ...
    ...    rowIndex：行索引(从0开始)
    ...
    ...    columnIndex：列索引(从0开始)
    ...
    ...    *示例：*
    ...
    ...    ${tableId} | ${rowIndex} | ${columnIndex} | Map_AppGrid_获取单元格位置 | 合同编号=xrqcb-002-2013-09-0003&合同属性=已定合同 | 乙方单位
    ${columnNameList}    ${valueList}    _parseQueryStringToArray    ${locatorColumnNamesAndValues}
    ${columnIndexInfo}    _getColumnIndexInfo_AppGrid    ${columnNameList}
    ${columnIndex}    _getColumnIndex_AppGrid    ${targetColumnName}
    select frame    ifrmGrid
    ${rowIndex}    _getSatisfiedRowIndex_AppGrid    ${columnNameList}    ${valueList}
    run keyword if    '${rowIndex}'=='-1'    fail    封装提示信息：未找到满足条件 "${locatorColumnNamesAndValues}" 的行，请检查参数是否正确。
    ${tableId}    Evaluate    'gridBodyTable'
    [Return]    ${tableId}    ${rowIndex}    ${columnIndex}

Map_AppGrid_批量选择多行
    [Arguments]    ${locatorData}    ${locatorColumnNames}=    ${rowFilterCondition}=
    [Documentation]    *功能：*
    ...
    ...    批量通过列表头和对应的值选中行(模拟按住Ctrl键选择多行)（参数为数组格式）
    ...
    ...    *参数说明：*
    ...
    ...    locatorData : 用来定位行的数据，是一个二维数组，数组的第一个元素是列头集合,其他元素为数据行。格式如下：
    ...
    ...    [['columnA','columnB','columnC','columnD'],[23,'aa','bb',100],[55,'cc','dd',200]]
    ...
    ...    locatorColumnNames：用于定位的列名，列名之间用&连接，格式为columnA&columnB；默认值为空，表示数组中所有列名都是定位列。
    ...
    ...    rowFilterCondition：过滤数据记录条件，格式为 columnA=value1&columnB=value2；默认值为空，表示所有数据行。
    ...
    ...    *示例：*
    ...
    ...    ${locatorData} | Evaluate | [[u'序号',u'款项类型',u'款项名称',u'计划付款金额',u'计划付款日期',u'付款说明'],[1,u'工程合同款',u'进度款',1234,u'2014-09-28',u'说明说明111'],[2,u'应扣款',u'代付代扣款',4567.89,u'2014-09-28',u'说明说明322']]
    ...
    ...    Map_AppGrid_批量选择多行 | ${locatorData} | 款项类型&款项名称 | 计划付款日期=2014-09-28
    ${isContainData}    _checkTwoDimensionArrayContainsData    ${locatorData}
    Return From Keyword If    '${isContainData}' == '0'
    ${inputColumnNamesAndValuesList}    _buildBatchInputVars    ${locatorData}    ${locatorColumnNames}    ${rowFilterCondition}
    Return From Keyword If    '${inputColumnNamesAndValuesList}'==''
    _Map_AppGrid_批量选择多行_Internal    ${inputColumnNamesAndValuesList}

Map_AppGrid_批量选择多行_根据序号
    [Arguments]    ${rowNumberList}
    [Documentation]    *功能：*
    ...
    ...    通过序号批量选中行(根据序号)
    ...
    ...    *参数说明：*
    ...
    ...    rowNumberList：序号列表，序号之间用|分割
    ...
    ...    *示例：*
    ...
    ...    Map_AppGrid_批量选择多行_根据序号 | 9|10|11
    Return From Keyword If    '${rowNumberList}'=='' or '${rowNumberList}'=='[NULL]'
    ${oids}    Evaluate    ''
    ${rowNumberArr}    Evaluate    u'${rowNumberList}'.split('|')
    ${rowNumberArrLen}    Evaluate    len(${rowNumberArr})
    select frame    ifrmGrid
    : FOR    ${i}    IN RANGE    ${rowNumberArrLen}
    \    ${rowNumber}    Evaluate    ${rowNumberArr}[${i}]
    \    ${oid}    Get Element Attribute    //table[@id='gridBodyTable']//tr[${rowNumber}]@oid
    \    ${oids}    Evaluate    '${oids}' + '${oid}' + ','
    ${oids}    Evaluate    '${oids}'[:-1]
    Execute Javascript    selectRowsById('${oids}');
    Run Keyword And Ignore Error    返回上级Iframe

_selectRowAndExecuteAction_AppGrid
    [Arguments]    ${columnNamesAndValues}    ${action}
    [Documentation]    ====内部方法，不对外使用====
    ...
    ...    *功能：*
    ...
    ...    获取满足条件的指定行，执行指定的操作
    ...
    ...    *参数说明：*
    ...
    ...    columnNamesAndValues：列表头和对应的值
    ...
    ...    action: 执行的操作 1:单击 2:双击
    ${columnNameList}    ${valueList}    _parseQueryStringToArray    ${columnNamesAndValues}
    #确定列名及其对应的索引
    ${columnIndexInfo}    _getColumnIndexInfo_AppGrid    ${columnNameList}
    select frame    ifrmGrid
    #定位行
    ${satisfiedRowIndex}    _getSatisfiedRowIndex_AppGrid    ${columnNameList}    ${valueList}
    run keyword if    '${satisfiedRowIndex}'=='-1'    fail    封装提示信息：未找到满足条件 "${columnNamesAndValues}" 的行，请检查参数是否正确。
    #执行指定操作
    #勾选可能的存在的checkbox
    Execute Javascript    var table=window.document.getElementById('gridBodyTable');var satisfiedRowIndex=${satisfiedRowIndex};var tr=table.rows[satisfiedRowIndex];var inputs=tr.getElementsByTagName('input');if(inputs&&inputs.length>0){for(var i=0;i<inputs.length;i++){if(inputs[i].type=='checkbox'&&!inputs[i].checked){var Css = document.defaultView.getComputedStyle(inputs[i], null);if(Css.display!='none'){inputs[i].click();}}}}
    run keyword if    '${action}'=='1'    click element    //table[@id='gridBodyTable']//tr[${satisfiedRowIndex}+1]/td    ELSE    Double Click Element    //table[@id='gridBodyTable']//tr[${satisfiedRowIndex}+1]/td
    Comment    run keyword if    '${action}'=='1'    click element    //table[@id='gridBodyTable']//tr[${satisfiedRowIndex}+1]    ELSE    Double Click Element
    ...    //table[@id='gridBodyTable']//tr[${satisfiedRowIndex}+1]/td
    Run Keyword And Ignore Error    返回上级Iframe

_selectRowAndExecuteAction_AppGrid_byRowNumber
    [Arguments]    ${rowNumber}    ${action}
    [Documentation]    ====内部方法，不对外使用====
    ...
    ...    *功能：*
    ...
    ...    通过行号，执行指定的操作
    ...
    ...    *参数说明：*
    ...
    ...    rowNumber：行号
    ...
    ...    action: 执行的操作 1:单击 2:双击
    select frame    ifrmGrid
    #执行指定操作
    Execute Javascript    var table=window.document.getElementById('gridBodyTable');var satisfiedRowIndex=${rowNumber}-1;var tr=table.rows[satisfiedRowIndex];var inputs=tr.getElementsByTagName('input');if(inputs&&inputs.length>0){for(var i=0;i<inputs.length;i++){if(inputs[i].type=='checkbox'&&!inputs[i].checked){var Css = document.defaultView.getComputedStyle(inputs[i], null);if(Css.display!='none'){inputs[i].click();}}}}
    run keyword if    '${action}'=='1'    click element    //table[@id='gridBodyTable']//tr[${rowNumber}]    ELSE    Double Click Element    //table[@id='gridBodyTable']//tr[${rowNumber}]
    Run Keyword And Ignore Error    返回上级Iframe

_getColumnIndexInfo_AppGrid
    [Arguments]    ${columnNameList}
    [Documentation]    ====内部方法，不对外使用====
    ...
    ...    *功能：*
    ...
    ...    获取列名对应索引位置信息
    ...
    ...    *参数说明：*
    ...
    ...    columnNameList：列名集合
    ...
    ...    *返回值说明：*
    ...
    ...    columnIndexInfo：列名和对应的索引信息
    _clearAutoExpanderTD_AppGrid
    ${columnIndexInfo}    _myExecuteJS    function rp(s){while(s.indexOf('　')>-1||s.indexOf(' ')>-1)s=s.replace('　','').replace(' ','');return s;};function formatObject(o){var s='';for(var key in o){s+=key+':'+o[key]+' ';}return s;}var gridBar=window.document.getElementById('gridBar');if(!gridBar){return'0|||封装提示信息：没找到id为"girdBar"的元素。请检查是否进入了正确的iframe，只需进入AppGrid对应的iframe即可，不要进入数据行的iframe了';}var rowHeader=gridBar.rows[0];var columnNames=${columnNameList};var columnIndexInfo={};var foundColumn;for(var i=0;i<columnNames.length;i++){foundColumn=false;for(var j=0;j<rowHeader.cells.length;j++){if(rp(rowHeader.cells[j].innerText)==columnNames[i]){columnIndexInfo[columnNames[i]]=parseInt(j/2);foundColumn=true;break;}}if(!foundColumn){return'0|||封装提示信息：未找到列"'+columnNames[i]+'"，请检查参数是否正确';}}gridBar.columnIndexInfo=columnIndexInfo;return'1|||'+formatObject(columnIndexInfo);
    [Return]    ${columnIndexInfo}

_getSatisfiedRowIndex_AppGrid
    [Arguments]    ${columnNameList}    ${valueList}
    [Documentation]    ====内部方法，不对外使用====
    ...
    ...    *功能：*
    ...
    ...    获取满足条件的行行索引
    ...
    ...    *参数说明：*
    ...
    ...    columnNamesAndValues：列表头和对应的值
    ${satisfiedRowIndex}    _myExecuteJS    var columnIndexList=[];var valueList=${valueList};var columnIndexInfo=window.parent.window.document.getElementById('gridBar').columnIndexInfo;var columnNameList=${columnNameList};function checkCellMatched(cell,value){if(cell&&cell.innerText){return cell.innerText==value;}else{return value=='';}}for(var i=0;i<columnNameList.length;i++)columnIndexList.push(columnIndexInfo[columnNameList[i]]);var matched;var gridData=window.document.getElementById('gridBodyTable');for(var i=0;i<gridData.rows.length;i++){matched=true;for(var j=0;j<columnIndexList.length;j++){matched=matched&&checkCellMatched(gridData.rows[i].cells[columnIndexList[j]],valueList[j]);}if(matched){return'1|||'+i;}}return'1|||-1';
    [Return]    ${satisfiedRowIndex}

_getColumnIndex_AppGrid
    [Arguments]    ${targetColumnName}
    [Documentation]    ====内部方法，不对外使用====
    ...
    ...    *功能：*
    ...
    ...    获取某一列的列索引位置
    ...
    ...    *参数说明：*
    ...
    ...    targetColumnName：需要计算位置的目标列
    _clearAutoExpanderTD_AppGrid
    ${columnIndex}    _myExecuteJS    function rp(s){while(s.indexOf('　')>-1||s.indexOf(' ')>-1)s=s.replace('　','').replace(' ','');return s;};var rowHeader=window.document.getElementById('gridBar').rows[0];var targetColumnName='${targetColumnName}';for(var i=0;i<rowHeader.cells.length;i++){if(rp(rowHeader.cells[i].innerText)==targetColumnName){return'1|||'+parseInt(i/2);}}return'0|||封装提示信息：目标列"'+targetColumnName+'"不存在，请检查参数是否正确';
    [Return]    ${columnIndex}

_getoidOfRow_AppGrid
    [Arguments]    ${columnNamesAndValues}
    [Documentation]    ====内部方法，不对外使用====
    ...
    ...    *功能：*
    ...
    ...    获取指定行的oid
    ...
    ...    *参数说明：*
    ...
    ...    columnNamesAndValues：定位行信息
    ${columnNameList}    ${valueList}    _parseQueryStringToArray    ${columnNamesAndValues}
    #确定列名及其对应的索引
    ${columnIndexInfo}    _getColumnIndexInfo_AppGrid    ${columnNameList}
    select frame    ifrmGrid
    #定位行
    ${satisfiedRowIndex}    _getSatisfiedRowIndex_AppGrid    ${columnNameList}    ${valueList}
    run keyword if    '${satisfiedRowIndex}'=='-1'    fail    封装提示信息：未找到满足条件 "${columnNamesAndValues}" 的行，请检查参数是否正确。
    #执行指定操作
    ${oid}    Get Element Attribute    //table[@id='gridBodyTable']//tr[${satisfiedRowIndex}+1]@oid
    Run Keyword And Ignore Error    返回上级Iframe
    [Return]    ${oid}

_Map_AppGrid_批量选择多行_Internal
    [Arguments]    ${columnNamesAndValuesList}
    [Documentation]    *功能：*
    ...
    ...    批量通过列表头和对应的值选中行(模拟按住Ctrl键选择多行)
    ...
    ...    *参数说明：*
    ...
    ...    columnNamesAndValuesList：列表头和对应的值,格式为column1=value1&column2=value2；如果列名或值中包含=，请用*eq*代替；记录之间用|分割
    ...
    ...    *示例：*
    ...
    ...    Map_AppGrid_批量选择多行 | 款项类型=贷款类房款&款项名称=银行按揭|款项名称=维修基金
    Return From Keyword If    '${columnNamesAndValuesList}'=='' or '${columnNamesAndValuesList}'=='[NULL]'
    ${columnNamesAndValuesArr}    Evaluate    u'${columnNamesAndValuesList}'.split('|')
    ${columnNamesAndValuesArrLen}    Evaluate    len(${columnNamesAndValuesArr})
    ${oids}    Evaluate    ''
    : FOR    ${i}    IN RANGE    ${columnNamesAndValuesArrLen}
    \    ${oid}    _getoidOfRow_AppGrid    ${columnNamesAndValuesArr[${i}]}
    \    ${oids}    Evaluate    '${oids}' + '${oid}' + ','
    ${oids}    Evaluate    '${oids}'[:-1]
    select frame    ifrmGrid
    Execute Javascript    selectRowsById('${oids}');
    Run Keyword And Ignore Error    返回上级Iframe

_clearAutoExpanderTD_AppGrid
    [Documentation]    ====内部方法，不对外使用====
    ...
    ...    *功能：*
    ...
    ...    清除标题列中的自动排序的空TD，以免影响计算列索引位置
    Execute Javascript    var gridBar=window.document.getElementById('gridBar');if(!gridBar){return'0|||封装提示信息：没找到id为"girdBar"的元素。请检查是否进入了正确的iframe，只需进入AppGrid对应的iframe即可，不要进入数据行的iframe了';}var rowHeader=gridBar.rows[0];var tdsToBeRemoved=[];for(var i=0;i<rowHeader.cells.length;i++){var td=rowHeader.cells[i];var isExpanderParent=td.getAttribute('isExpanderParent');if(isExpanderParent){td.removeAttribute('isExpanderParent');continue;}var isAutoExpander=td.getAttribute('isAutoExpander');if(isAutoExpander){tdsToBeRemoved.push(td);}}if(tdsToBeRemoved.length>0){var tdInArray;while(tdInArray=tdsToBeRemoved.pop()){rowHeader.removeChild(tdInArray);}}
